- name: GoBackup | Ensure required variables are set
  assert:
    that:
      - gobackup_version is defined
      - gobackup_platform is defined and gobackup_platform in ['linux', 'darwin']
      - gobackup_arch is defined and gobackup_arch in ['amd64', 'arm64']
      - gobackup_github_user is defined
      - gobackup_github_repo is defined
      - gobackup_bin_path is defined
      - gobackup_dir is defined
      - gobackup_config_filename is defined
      - gobackup_models is defined and gobackup_models | length > 0

- name: GoBackup | Set download filename
  ansible.builtin.set_fact:
    gobackup_download_filename: "gobackup-{{ gobackup_platform }}-{{ gobackup_arch }}.tar.gz"

- name: GoBackup | Grab latest binaries
  ansible.builtin.unarchive:
    src: "https://github.com/{{ gobackup_github_user }}/{{ gobackup_github_repo }}/releases/download/v{{ gobackup_version }}/{{ gobackup_download_filename }}"
    dest: /tmp
    remote_src: true
    mode: "0755"
  register: gobackup_download

- name: "GoBackup | Copy binary to {{ gobackup_bin_path }}"
  ansible.builtin.copy:
    src: "/tmp/gobackup"
    dest: "{{ gobackup_bin_path }}"
    mode: "0755"
    remote_src: true
  become: true

- name: GoBackup | Create directory
  ansible.builtin.file:
    path: "{{ gobackup_dir }}"
    state: directory
    owner: "{{ gobackup_owner | default(omit) }}"
    group: "{{ gobackup_group | default(omit) }}"
    mode: "0755"
  become: true

- name: GoBackup | Create config
  ansible.builtin.template:
    src: gobackup.yml.j2
    dest: "{{ gobackup_dir }}/{{ gobackup_config_filename }}"
    owner: "{{ gobackup_owner | default(omit) }}"
    group: "{{ gobackup_group | default(omit) }}"
    mode: "0644"
  become: true

- name: GoBackup | SystemD service file
  ansible.builtin.template:
    src: gobackup.service.j2
    dest: /etc/systemd/system/gobackup.service
    owner: root
    group: root
    mode: "0644"
  become: true
  when: gobackup_systemd

- name: GoBackup | SystemD service
  ansible.builtin.systemd_service:
    name: gobackup
    enabled: true
    state: started
    daemon_reload: true
  when: gobackup_systemd
  become: true
